#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import signal
import irc.bot
import bsddb
import time
import string
import ConfigParser
import xmlhandler
import login
import gl
import getpass
import mythread
import addthread


global botinstance
botinstance = None

class LockBot(irc.bot.SingleServerIRCBot):
	def __init__(self, channel, server, nickname):
		irc.bot.SingleServerIRCBot.__init__(self, [(server, 6667)], nickname, "lockbot-devel")
		self.VERSION_NAME = "lockbot version 1.0"
	#	self.password = getpass.getpass("Enter %s's salesforce password: " %gl.name)
		self.channel = channel

	def __del__(self):
		self.savelist()
		irc.bot.SingleServerIRCBot.__del__(self)

	def on_welcome(self, c, e):
		c.join(self.channel)

	def on_pubmsg(self, c, e):
		a = e.arguments[0].split(":", 1)
		if len(a) > 1 and irc.strings.lower(a[0]) == irc.strings.lower(self.connection.get_nickname()):
			self.do_command(e, a[1].split())
		else:
			a = e.arguments[0].split(",", 1)
			if len(a) > 1 and irc.strings.lower(a[0]) == irc.strings.lower(self.connection.get_nickname()):
				self.do_command(e, a[1].split())
		return

	def do_command(self, e, cmdline):
		nick = e.source.nick
		c = self.connection
		cmd = ""
		if len(cmdline) > 0:
			cmd = cmdline[0]

		if cmd == "usage":
			self.cmd_usage(c)

		elif cmd == "date":
			self.cmd_date(c)

		elif cmd == "add":
			if len(cmdline) == 4:
				self.add(c,cmdline[1],cmdline[2],string.atoi(cmdline[3]))

		elif cmd == "minus":
			if len(cmdline) == 4:
				self.minus(c,cmdline[1],cmdline[2],string.atoi(cmdline[3]))

		elif cmd == "mtshowcase":
			if len(cmdline) == 3:
				num=cmdline[1]
				timeout=cmdline[2]
				self.mtshowcase(c,string.atoi(num),string.atoi(timeout),self.channel)
		elif cmd == "enforce":
			if len(cmdline) == 1:
				case = cmdline[0]
				self.enforce(c, case, nick)
		else:
			self.print_invalidmsg(c)
			
	def print_invalidmsg(self, c):
		c.privmsg(self.channel, "Invalid command or arguments")
		c.privmsg(self.channel, "Run usage command")

	def cmd_date(self,c):
		date = time.strftime('%Y-%m-%d',time.localtime(time.time()))
		c.privmsg(self.channel,date)

	def cmd_usage(self, c):
		c.privmsg(self.channel, self.VERSION_NAME)

	def add(self,c,user,num=0,timeout=5):
		
		thread1 = addthread.add_thread(int(num),int(timeout),c,self.channel,"add",user)
		thread1.daemon = True
		thread1.start()

	def minus(self,c,user,num=0,timeout=5):
		thread1 = addthread.add_thread(int(num),int(timeout),c,self.channel,"minus",user)
		thread1.daemon = True
		thread1.start()

	def mtshowcase(self,c,num,interval,channel):
		try:
			thread1 = mythread.sc_thread(num,interval,c,self.channel)
			thread1.daemon = True
			thread1.start()
			
		except(KeyboardInterrupt, SystemExit):
			print '\n! Received keyboard interrupt, quitting threads.\n'

	def enforce(self, c, case, nick):
		pass
	
def termhandler(signum, frame):
	print("Terminating lockbot")
#	global botinstance
#	botinstance.savelist()

def main():
	global botinstance
	botinstance = LockBot(gl.channel, gl.server,gl.nickname)
#	signal.signal(signal.SIGTERM, termhandler)
	botinstance.start()

if __name__ == "__main__":
	main()
